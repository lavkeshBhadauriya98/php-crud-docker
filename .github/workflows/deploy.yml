
name: Deploy PHP App to EC2 via ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2️⃣ Configure AWS credentials for GitHub Action (optional if using EC2 role)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3️⃣ Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4️⃣ Build, tag and push Docker image to ECR
      - name: Build and Push Docker image
        run: |
          ECR_REPOSITORY=php-crud-app
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG=latest

          echo "Building Docker image..."
          docker buildx build --platform linux/amd64 --load -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

          echo "Pushing Docker image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # 5️⃣ Deploy on EC2
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Variables
            ECR_REPOSITORY=php-crud-app
            ECR_REGISTRY=170974506713.dkr.ecr.eu-north-1.amazonaws.com
            IMAGE_TAG=latest

            # Install/update AWS CLI if missing
            if ! command -v aws &> /dev/null
            then
              sudo apt update -y
              sudo apt install -y unzip docker.io
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              sudo ./aws/install --update
              rm -rf awscliv2.zip aws
            fi

            # Login to ECR using EC2 role
            aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin $ECR_REGISTRY

            # Stop old container if exists
            docker stop php-app || true
            docker rm php-app || true

            # Pull latest image
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            # Run container
            docker run -d -p 80:80 --name php-app \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASS=${{ secrets.DB_PASS }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
